C:\Users\elavl\AppData\Local\Programs\Python\Python39\python.exe C:\Users\elavl\IdeaProjects\Compartmental-GP-NeurIPS-2020\seir-loop.py
C:\Users\elavl\IdeaProjects\Compartmental-GP-NeurIPS-2020\data_loader.py:253: FutureWarning: In a future version of pandas all arguments of DataFrame.pivot will be keyword-only.
  dat_feat = country_feat.pivot('country', 'metric', 'value')
running with seed 5
('United Kingdom', 14.3810927462025, 183.41772425100862)
('Italy', 281.56256224423413, 3393.399391429932)
('Germany', 82.59949218498043, 1032.4827347076969)
('Spain', 103.86137212502547, 1292.3002927061648)
('US', 255.29782160237386, 2471.360878366293)
('France', 181.52906222632186, 2309.7020310987837)
('Belgium', 77.91423085097783, 946.485187891017)
('Korea, South', 5.23788768086377, 66.67147807308402)
('Brazil', 913.1791481008147, -11348.037359619815)
('Iran', 128.78412768505407, -1573.6168326564366)
('Netherlands', 51.630503700675725, 655.7618541344599)
('Canada', 9.685480645413724, -122.6431756800718)
('Turkey', 53.25951002737321, 669.0390163786599)
('Romania', 19.876774659680148, 250.25440250894934)
('Portugal', 18.51668583899292, 226.19527221842966)
('Sweden', 11.100952960319178, 138.99503225721637)
('Switzerland', 24.02993637813261, 301.7114537936789)
('Ireland', 14.783193242115757, 188.26709722244476)
('Hungary', 11.263291527384341, 144.59131524479903)
('Denmark', 7.597761518148172, 93.29592112353964)
('Austria', 12.385220279985552, 155.96807209942858)
('Mexico', 265.7524047809506, -3358.715558364489)
('India', 184.502843726521, -2020.2303781153187)
('Ecuador', 26.520608277874974, -338.2315376999154)
('Russia', 59.32135666561521, -704.0988666789904)
('Peru', 222.6569001488962, -2831.4152719534213)
('Indonesia', 68.18417338452453, -865.7318845422934)
('Poland', 2.2883882400638687, 29.856198664528904)
('Philippines', 15.368016787836613, -35.81837861858395)
('Japan', 6.20027067034476, 75.18561096938465)
('Pakistan', 38.91870292044373, 380.7231504515473)
running with seed 6
C:\Users\elavl\AppData\Local\Programs\Python\Python39\lib\site-packages\pyro\infer\trace_elbo.py:138: UserWarning: Encountered NaN: loss
  warn_if_nan(loss, "loss")
C:\Users\elavl\AppData\Local\Programs\Python\Python39\lib\site-packages\pyro\optim\dct_adam.py:132: UserWarning: This overload of add_ is deprecated:
	add_(Number alpha, Tensor other)
Consider using one of the following signatures instead:
	add_(Tensor other, *, Number alpha) (Triggered internally at  ..\torch\csrc\utils\python_arg_parser.cpp:882.)
  exp_avg.mul_(beta1).add_(1 - beta1, grad)
step    0 loss = nan
running with seed 7
step    0 loss = 505271
step  100 loss = 161093
step  200 loss = 127240
step  300 loss = 112503
step  400 loss = 123997
step  500 loss = 102519
step  600 loss = 72275.6
step  700 loss = 50547.9
step  800 loss = 48353.1
step  900 loss = 34427.5
step 1000 loss = 44955.3
step 1100 loss = 22288.6
step 1200 loss = 20009.9
step 1300 loss = 24260.8
step 1400 loss = 22659.5
step 1500 loss = 55300.8
step 1600 loss = 34685.2
step 1700 loss = 18185.1
step 1800 loss = 22498.2
step 1900 loss = 21299.5
('United Kingdom', 101.04337808720237, -1169.7557939832186)
('Italy', 503.41276262905495, 6082.464866103045)
('Germany', 53.81363257513515, 668.6168448234647)
('Spain', 165.97464232529154, 2035.2019611017627)
('US', 780.3657360052043, 10723.692535794784)
('France', 32.16487055423388, -403.67518179730257)
('Belgium', 73.30361044287609, 872.5100938419212)
('Korea, South', 3.12453591488984, 37.972369345386966)
('Brazil', 618.5237357159466, -7943.208957375577)
('Iran', 129.4406990732007, -1592.477477484108)
('Netherlands', 50.05031283256451, 629.2660698537105)
('Canada', 38.34444523894713, -505.6559039164819)
('Turkey', 83.0569662577886, 1041.6982473864139)
('Romania', 2.7850869547343104, -34.59442201888322)
('Portugal', 16.992846730923773, 205.25896711117812)
('Sweden', 42.49413292751786, 513.8257491727783)
('Switzerland', 10.050569562792221, 124.42474436165904)
('Ireland', 9.101931398224709, 115.10256736845004)
('Hungary', 7.469570575476995, 95.56166064765985)
('Denmark', 7.387176448290752, 90.89975999395853)
('Austria', 9.350008745339888, 116.75379114706892)
('Mexico', 680.9057464872598, -8325.556153651421)
('India', 796.1053496432023, 10076.65644322587)
('Ecuador', 33.6331402512248, 399.48325158438)
('Russia', 269.8891922180323, 3076.2440942825756)
('Peru', 65.64167855010642, -891.6701901835986)
('Indonesia', 65.68919323799433, -813.2175015878828)
('Poland', 8.094358885211813, -103.63652587838368)
('Philippines', 18.294163720431474, 127.8286182394965)
('Japan', 18.257816470994936, 234.971235329192)
('Pakistan', 110.58771780543638, 1407.9098824264809)
running with seed 8
step    0 loss = 5.99798e+08
step  100 loss = 312798
step  200 loss = 95141.5
running with seed 9
step    0 loss = 1.27911e+10
step  100 loss = 290636
step  200 loss = 107859
step  300 loss = 307906
step  400 loss = 60391.8
step  500 loss = 134986
step  600 loss = 32487.2
step  700 loss = 28637
step  800 loss = 24497.7
step  900 loss = 26549.1
step 1000 loss = 58617.5
step 1100 loss = 16437.9
step 1200 loss = 18249.2
step 1300 loss = 35716.5
step 1400 loss = 16285.9
step 1500 loss = 14925.5
step 1600 loss = 17310.2
step 1700 loss = 18440.1
step 1800 loss = 22354.6
step 1900 loss = 25425.8
('United Kingdom', 9.040997224133271, 96.95070313989345)
('Italy', 286.85314199393133, 3423.4578240457854)
('Germany', 127.06032067160608, 1555.333539273053)
('Spain', 121.43260994493437, 1488.9976878612529)
('US', 922.4254859454278, 12528.151569525013)
('France', 227.7497235472874, 2947.9585461945435)
('Belgium', 85.96944063681951, 1051.90623418189)
('Korea, South', 3.1229358981659483, 38.13454293588467)
('Brazil', 130.79691106820766, -1585.1836032471292)
('Iran', 200.99149470985154, -2451.7629995626294)
('Netherlands', 8.11775415027351, 96.5478949855314)
('Canada', 163.00904137751644, 1971.0722953329735)
('Turkey', 49.13404600488999, 619.5721066463996)
('Romania', 0.7493102122073942, 6.341973050297895)
('Portugal', 9.034536462294136, 107.17014667176355)
('Sweden', 6.6087664622624045, 67.20628869583933)
('Switzerland', 15.22954956398614, 191.09699493495023)
('Ireland', 6.799083220050961, 85.44521078355804)
('Hungary', 7.429493095062933, 95.5936382241476)
('Denmark', 8.147241214047275, 100.4922737986052)
('Austria', 8.668919130331645, 108.26116722561217)
('Mexico', 654.8524945156621, 8217.376202772168)
('India', 766.3226773552612, -9966.55457402228)
('Ecuador', 38.3260883778058, 469.82566297717676)
('Russia', 92.98648237125174, -1088.1275645887604)
('Peru', 578.2961621860144, 6865.7516528563865)
('Indonesia', 47.795864145205705, -564.2991543846634)
('Poland', 0.9169632355311561, 11.440869991883403)
('Philippines', 29.330535864351532, 363.3655838529093)
('Japan', 2.6503901399142396, 30.702758377601203)
('Pakistan', 1712.6758737883977, 21514.00325945284)
running with seed 10
step    0 loss = 1.75979e+06
step  100 loss = 229529
step  200 loss = 218354
step  300 loss = 972464
step  400 loss = 454317
step  500 loss = 41830.9
step  600 loss = 2.23617e+06
step  700 loss = 3.39783e+06
step  800 loss = 20262.3
step  900 loss = 77089.5
step 1000 loss = 912910
step 1100 loss = 33383.8
step 1200 loss = 18306.8
step 1300 loss = 29646.6
step 1400 loss = 31774.4
step 1500 loss = 34692.4
step 1600 loss = 21119
step 1700 loss = 20700.2
step 1800 loss = 83208.5
step 1900 loss = 14709.7
('United Kingdom', 134.14560955456787, -1598.9878929759725)
('Italy', 25.20387640906816, 183.54030615822248)
('Germany', 182.99122907716182, 2234.239941869738)
('Spain', 146.96991687542584, 1740.9042980831823)
('US', 1638.6017292980512, -18241.182830822254)
('France', 471.22800676606465, -6040.157804772628)
('Belgium', 123.15388142512799, 1522.6063230858892)
('Korea, South', 5.655444382370395, 72.14345362534189)
('Brazil', 1380.6918045309424, -17287.837387607935)
('Iran', 167.99538877386772, -2018.1782889076885)
('Netherlands', 26.647049731323, 329.34580256428393)
('Canada', 94.04466903396788, -1218.9184008139875)
('Turkey', 40.18988973961698, 499.4354840215877)
('Romania', 2.1085832089525045, -25.430726592145163)
('Portugal', 8.651943191366062, 100.03570808219482)
('Sweden', 28.991445447842956, 351.4796738994602)
('Switzerland', 22.813030418989403, 287.1266894460643)
('Ireland', 5.7584493550874125, 71.3241410932704)
('Hungary', 8.452629630402956, 108.82272517966113)
('Denmark', 7.838373178159385, 97.41471420165112)
('Austria', 8.020200045823387, 100.5926590233699)
('Mexico', 1193.611172875189, -14542.018657103737)
('India', 489.3730631098304, -6455.598774687955)
('Ecuador', 37.0067323663839, -478.8406385656622)
('Russia', 59.44422471350617, -676.4463033648285)
('Peru', 461.59451061165674, -5742.822432223111)
('Indonesia', 62.77794492529688, -788.8202865296124)
('Poland', 9.544391964951858, -123.21671143154339)
('Philippines', 12.962152806110117, 17.475707438255824)
('Japan', 3.2584700888470968, 35.57981825595972)
('Pakistan', 30.934375782071154, -273.90217407953764)
running with seed 11
step    0 loss = 1.19752e+07
step  100 loss = 294670
step  200 loss = 333473
step  300 loss = 110634
step  400 loss = 101040
Traceback (most recent call last):
  File "C:\Users\elavl\IdeaProjects\Compartmental-GP-NeurIPS-2020\seir-loop.py", line 92, in <module>
    forecaster = Forecaster(model, Y_train, covariates_notime, learning_rate=0.01, num_steps=niter)
  File "C:\Users\elavl\IdeaProjects\Compartmental-GP-NeurIPS-2020\forecast\forecaster.py", line 290, in __init__
    loss = svi.step(data, covariates) / data.numel()
  File "C:\Users\elavl\AppData\Local\Programs\Python\Python39\lib\site-packages\pyro\infer\svi.py", line 128, in step
    loss = self.loss_and_grads(self.model, self.guide, *args, **kwargs)
  File "C:\Users\elavl\AppData\Local\Programs\Python\Python39\lib\site-packages\pyro\infer\trace_elbo.py", line 137, in loss_and_grads
    surrogate_loss_particle.backward(retain_graph=self.retain_graph)
  File "C:\Users\elavl\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\tensor.py", line 221, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "C:\Users\elavl\AppData\Local\Programs\Python\Python39\lib\site-packages\torch\autograd\__init__.py", line 130, in backward
    Variable._execution_engine.run_backward(
KeyboardInterrupt

Process finished with exit code -1073741510 (0xC000013A: interrupted by Ctrl+C)
